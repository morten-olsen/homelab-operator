apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}'
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        app: '{{ .Release.Name }}'
    spec:
      containers:
        - name: '{{ .Release.Name }}'
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: '{{ .Values.image.pullPolicy }}'
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /media/movies
              name: movies
            - mountPath: /media/tv-shows
              name: tvshows
            - mountPath: /media/music
              name: music
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: '{{ .Release.Name }}-config'
        - name: movies
          persistentVolumeClaim:
            claimName: movies
        - name: tvshows
          persistentVolumeClaim:
            claimName: tvshows
        - name: music
          persistentVolumeClaim:
            claimName: music
