apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
    spec:
      containers:
        - name: "{{ .Release.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          volumeMounts:
            - mountPath: /data
              name: data
          env:
            - name: TZ
              value: "{{ .Values.globals.timezone }}"
            - name: RUN_MIGRATIONS
              value: "1"
            - name: OAUTH2_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-client"
                  key: clientId
            - name: OAUTH2_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-client"
                  key: clientSecret
            - name: OAUTH2_OIDC_DISCOVERY_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-client"
                  key: configuration
            - name: OAUTH2_OIDC_PROVIDER_NAME
              value: Authentik
            - name: OAUTH2_PROVIDER
              value: oidc
            - name: OAUTH2_REDIRECT_URL
              value: https://{{ .Values.subdomain }}.{{ .Values.globals.domain }}/oauth2/oidc/callback
            - name: OAUTH2_USER_CREATION
              value: "1"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-pg-connection"
                  key: url
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-data"
